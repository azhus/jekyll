---  
layout: post  
title: "ImageMagick严重漏洞，速速修补"
date: 2016-05-05
categories:  传媒信安     
comments: true
description: 站长朋友请一定要看进来！由ImageMagick 造成的[Wordpress某核心功能命令执行漏洞。CVE-2016-3714这个洞影响到PHP的Imagick类，相信还有很多Web应用受到影响，应该也包括JAVA的。
tags:
    - 传媒信安
---  
今天（2016-05-05）凌晨，小编在[微博](http://weibo.com/1074745063/Du0UYBmWE?type=comment#_rnd1462407778224)上看到了这样一条重磅漏洞通告：

> 由ImageMagick [CVE-2016-3714](https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2016-3714)造成的[Wordpress某核心功能命令执行漏洞](http://www.wooyun.org/bugs/wooyun-2016-0205047)。CVE-2016-3714这个洞影响到PHP的Imagick类，相信还有很多Web应用受到影响，应该也包括JAVA的。 

为什么是重磅漏洞呢？因为漏洞影响面积几乎可以覆盖所有互联网应用！只要有图片上传功能、只要图片上传后在云端有二次渲染（压缩、美化、添加水印）动作，那么恭喜你！你的服务器就可以被一张精心构造的图片给黑下来了！想一想，只要是一个互联网应用就有头像上传功能吧？移动应用独角兽——微信，大家刷朋友圈吧？朋友圈里有什么？美食、萌娃、风景图片吧？呵呵，腾讯你可要及时补上这个洞啊233。

目前一个最简单的检查你的服务器是否受此漏洞影响的方法：

打开Linux的命令行终端，输入以下命令

```
convert 'https:";echo vulnerable"' - 2>&- .
```

如果终端回显： vulnerable

那么恭喜你！你用的ImageMagick程序版本和所有第三方应用程序均受此漏洞影响。

截止小编发稿推送时，ImageMagick官方还在调试这个漏洞的补丁，各大操作系统厂商都还没有发布正式的漏洞补丁，各位手里有互联网服务器的站长朋友、运维兄弟们，不要干等补丁，赶快跟着小编下面的方法临时堵上这个漏洞的利用方式吧：

Linux用户请将以下配置指令添加到/etc/ImageMagick/policy.xml的<policymap>节点中：

```
<policy domain="coder" rights="none" pattern="EPHEMERAL" />
<policy domain="coder" rights="none" pattern="HTTPS" />
<policy domain="coder" rights="none" pattern="MVG" />
<policy domain="coder" rights="none" pattern="MSL" />
<policy domain="coder" rights="none" pattern="TEXT" />
<policy domain="coder" rights="none" pattern="MSL" />
<policy domain="path" rights="none" pattern="@*" />
```

然后在命令行输入以下命令检查编码器禁用策略是否已经生效了：

```
$ convert -list policy
Path: [built-in]
  Policy: Undefined
    rights: None

Path: /etc/ImageMagick/policy.xml
  Policy: Coder
    rights: None
    pattern: EPHEMERAL
  Policy: Coder
    rights: None
    pattern: HTTPS
  Policy: Coder
    rights: None
    pattern: MVG
  Policy: Coder
    rights: None
    pattern: MSL
  Policy: Coder
    rights: None
    pattern: TEXT
  Policy: Coder
    rights: None
    pattern: MSL
  Policy: Path
    rights: None
    pattern: @*
```

然后，你可以再输入上面的检查漏洞是否存在的命令行脚本来验证漏洞已经临时给补上了。这一次，应该不会再输出vulnerable了，程序会挂起执行，你CTRL-C退出执行即可。

当然，小编也不会告诉你：如果你没有能力守护你的图片上传功能保护你的用户，那么请对你的用户负责暂时阉了这个功能吧--"

ps: 看到这个漏洞，让我又想到了小编之前研究过的用一张图片黑遍全宇宙的一些猥琐技巧，不多说了，链接放在延伸阅读里，请各位微信用户猛戳阅读原文查看

# 延伸阅读

* [基于图片“（不可见）水印”技术的客户端漏洞利用负载隐藏技术 at 2015-06](http://stegosploit.info/) APT攻击者的最爱：躲避查杀，隐藏核心攻击负载的利器！白帽子的噩梦。
* [在GIF图片中隐藏任意脚本的方法 at 2010-10-13](https://www.huangwei.me/blog/2010/10/13/embed-script-inside-gif/) 

# 参考资料

* [ImageMagick Security Issue by 官方论坛提供的临时修补方法 at 2016-05-04 19:29](https://www.imagemagick.org/discourse-server/viewtopic.php?f=4&t=29588)
* [Remote code execution vulnerability in ImageMagick](https://news.ycombinator.com/item?id=11623694)
* [Huge number of sites imperiled by critical image-processing vulnerability](http://arstechnica.com/security/2016/05/easily-exploited-bug-exposes-huge-number-of-sites-to-code-execution-attacks/)