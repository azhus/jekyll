---  
layout: post  
title: "夏季小学期总结之信息安全工程实践"
date: 2016-08-02
categories:  传媒信安     
comments: true
description:   教学相长，寓教于乐。在网络攻防中体验网络空间安全的速度与激情，2016年7月是一个值得回味的夏季学期。前事不忘，后事之师，同学们的意见和反馈我们都已经收到并记录在这里了，希望我们传媒信安越来越好。
tags:
    - 传媒信安
---  
本次小学期的实践内容可以[移步这里查看](http://sec.cuc.edu.cn/huangwei/wiki/teaching_synthetic_practice.html)，欢迎同行和好友们提意见和建议。

今年是传媒信安历史上的第二次信息安全工程实践小学期，本着长江后浪推前浪的精神，今年的小学期从内容和难度两个方面我们进行了大刀阔斧的改革，在国家对网络空间全人才的政策和需求更明确的今天，未知攻焉知防：我们大胆的将网络攻击工具开发首次明确纳入到小学期的实践内容。在理解攻击者意图和能力的前提下，从对抗思路、对抗方法和对抗工具多纬度展开安全检测与防御。小学期结课答辩上，我们欣喜的看到了一些超出期望的成果和作品出来，同时，大跃进式发展所带来的问题同样值得我们去思考明年的改进方向和完善策略。

结合学生反馈，我们梳理了以下3个方面的痛点亟需解决。

1. ***平衡讲课时长和给学生动手的时长是一门艺术***，什么时候放手、什么时候手把手需要师生加强沟通。从教授的角度来说，按照美国教育学家艾德格·戴尔（Engar Dale）于1969年设计的“学习⾦字塔”，最理想的是“放手”让学生通过Do来GET目标知识点和技能。在互联网上有一个知名的技术学习系列：learn python the hard way，从学习者视角来看，我认为是十分有价值的。因为不管一个人学到什么程度，终究是需要实战的。而实战中，失败、挫折是不可回避的。尤其对于网络安全攻防的实践来说，规划好的“剧本”往往并不能一镜到底：逢山开路，遇水搭桥是常有的事情。但是通过最近2年的夏季小学期课程经历来看，由于能力基础、抗挫折能力、好奇心等个体差异的普遍性，呵护学生探索的成就感就是平衡讲课时长和给学生动手时长的调节砝码。虽然从人群总体来看，90后比80后要更外向开放，但积极主动问老师问题的学生依然是少数派。所以，寄希望于学生在小学期实践过程中主动来问问题的想法是时候该彻底放弃了。多巡场、多主动问学生进度可能是解决这个问题的一个有效途径。

2. ***要坚持推广主流先进技术***。由于没有特别强调使用markdown和git，导致同学们在协同开发过程中和最后的成果整合到报告过程中出现了不少不必要的“沟通”bug。事实上，在之前的网络安全课程大作业分组完成任务中，由于我明确要求了使用markdown和git，虽然在此之前大多数同学对这2个技术是陌生的，但有压力就有动力，所有同学在最后的结课大作业中都是按照要求把markdown格式书写的大作业报告提交到了课程github。这次小学期忽略了这个技术手段约束要求，是一个重大失误。

3. ***游戏性、参与感很重要***。今年的工程实践第一周主要是CTF模式比赛，和去年不同的是今年改为个人赛，不再分组，杜绝抱大腿和打酱油。有难度，但经过提示之后再探索一番总能GET到。禁止相互抄袭解答，但点到即止的相互讨论和交流既增进了同学之间的合作交流，更是碰撞出了很多超出出题人想象的新奇Flag GET方法。


下图拍摄自小学期开始后第二天晚上，同学们聚精会神于CTF比赛中而不能自拔。

![](http://127.0.0.1:4000//resources/images/i1.jpg) 

不少同学给我表达了：***CTF有毒，会上瘾***。

![](http://127.0.0.1:4000//resources/images/i2.jpg) 

本次小学期由于是对信息安全本科专业三年专业课的一个综合实践，因此一个老师肯定是不够用了的，除了我的课程搭档安老师，范师傅也多次友情串场来答疑。

![](http://127.0.0.1:4000//resources/images/i3.jpg) 

![](http://127.0.0.1:4000//resources/images/i4.jpg) 

以下所有内容直接复制自同学们的课程结题报告，收获满满，建议走心。身为老师，我们要做的就是倾听来自学生们的声音，不断提高自身素养和专业水平，改进教学方法，让同学们学有所成，希望我们能为中国的网络空间安全事业源源不断的输送优秀人才！

## 同学们的课程收获

```
将以前在计算机网络的课上以及黄玮老师的课上学到的知识应用到实验中，在之前的计算机网络的课程中，最多是使用Packet Tracer一类的模拟搭建网络的软件来练习，但是这一次的实践中是真的要在实际的电脑和虚拟机上配置IP以及网关、DNS服务器等各种信息……最开始遇到这样真正的实际操作时不免有点头大，但是在后来老师简单的讲解网络拓扑结构之后，才开始慢慢有了思路，其中也请教了老师和一些比较优秀的同学，慢慢地弥补了实验过程的一些缺漏。我觉得可能做实验就是一个利用所学的知识不断尝试的过程、也是一个不断学习新的知识和实际应用的过程。在以后学习的道路上，也应该多动手多实践、这样记忆才会深刻，掌握的知识才会更加扎实，而不是只背背书考考试而已。我觉得这样的实践虽然节奏稍微快了点，但的确参与实践的同学都会在这样的一个过程不断的汲取真正的精华、不断成长。在未来的工作生活中，我想我也要记住奉行着“实践出真知”这一句老话。另外做的不好的地方就是时间安排不够谨慎，导致浪费了一些时间在不必要的步骤上，以后应该更加有方向、有选择地利用时间做事情。
```

```
此次课程主题是信息安全专业课三年综合运用和实践。在做实验之前以为会跟之前的小学期一样，写写代码什么的就可以了，然而在实验过程中发现并不容易，比前两次小学期的都要难，因为这次实验是三年所学知识的综合。但自己学到的知识与难度成反比，这让我认识到自己掌握的知识少之又少，许多之前掌握的知识也已经忘记。

在实验过程中遇到了许多问题，但很多问题都是之前学过的一些基础知识。通过这次实验复习并巩固了计算机网络安全相关的知识，掌握了各个网络模式的特点和应用以及DNS服务器的配置等问题。
在实验中我认识到，只有具有足够的相关知识储备，做起实验来才能得心应手，才不会有不知该从何下手的无力感。而且在实验中应尽量减少操作的盲目性，提高实验效率。比如一开始做实验时，我们每天都在实验室赶着做，但是却一无所获，没有什么进展。这让我意识到在做实验时不应漫无目的地做，应将实验分步来做。

总之，通过这次实验一方面加深了我对课程理论知识的认识，另一方面也提高了自己的实验操作能力。同时也深刻认识到了自己知识的匮乏，在往后的学习中会及时弥补自己能力的不足。
```

```
工程实践的部分，我们小组由于时间的原因，所以并没有完成起初预想的结果，但在整个实现的过程中，还是有很大的收获。就整个项目来说，作为红方我们首先对实现远程攻击的整个过程有了一个细致的了解，对其中要用到的技术也有了一定的认识，在我看来，做项目的过程中，前期对项目的任务细化很重要，虽然在任务初期就分好了红蓝方，但单就我们红方来说，整个工程对我们而言还是比较庞大的，所以必须把每一步都安排好，才能提高整体的效率。除此之外，因为我们在实现的过程中，大部分代码还是之前课堂上别的同学写好的代码，我们进行修改，所以看起来工程量不那么大，但其实做的过程中问题还是很多。还有，整个过程中，方法很重要，尤其是调试的方法，一定要有好的写代码的习惯，因为这次的调试工作不光是在主机上，还要在虚拟机上也要可以实现，所以可能并不能去单步调试之类的，写日志就是一个很好的解决办法。最重要的一个收获，那就是在做的过程中，一定要细心、心思缜密，这样才不会留下太多的破绽被防御方发现。
```

```
为期半个月的小学期实践吧，每天都是改别人的代码，调试，解决问题。很大的一次锻炼吧，毕竟要做的东西很多！首先是从未知到知道了、了解到了这样的一个过程吧，就像反弹shell第一次看到这个词。学会搭建本地服务器，虽然很简单，但是在没接触之前一切都是未知，至少有了了解，大概就是原来搭建本地服务器不仅仅是linux这样的感觉。

CVE这个不得不说在软件安全的课上看到有同学对这个的研究，shellcode等等，感觉真的很难。这次接触到之后呢，应该是有了一点点的了解，大致知道它的运行原理吧。但是对shellcode代码依然敬而远之，真的很难。

文件下载，这大概是本次实践中我们组唯一独立完成的一个功能了。对URLDownloadToFile有了一点了解，以及system函数在没有运行完之前代码将不会继续往下执行，还有批处理可以实现启动多个exe程序同时运行，批处理有很强大的功能，感觉这个可以很深入的学习。

进程隐藏，这个主要是对别人代码的修改了，但是理解的有一点少，只是机械的调试运行，实现进程隐藏这个功能而已。
```

```
在此次小学期的学习中，我基本掌握了Socket通信的相关知识，了解到了Server端和Client端如何通过Socket建立连接，并以此为基础实现文件的上传下载，反弹Shell。Server端实现了以下功能：mkdir 增加目录、rmdir 删除目录、ls 列目录、upload 上传文件、down 下载文件、delfile 删除文件，且以上功能全部能够在虚拟机中调试成功。

在我之前版本的代码中，由于对各数据类型所占字节的估计错误，导致在虚拟机中程序崩溃无法运行。但是在虚拟机中启动VS单步调试可以上传成功。我做了两个改动解决只能启动VS单步调试这个问题：重新规划多线程，重构报文结构。

通过这段期间的代码调试，我的耐心和毅力得到了极大的考验，也对VS中各项调试特别是内存中断调试的掌握更加熟练。

在配置网络环境的过程中，我也第一次真正的了解到攻击者，受害者，检测方三者之间的网络关系。成功之路总是曲折的，第一次我做的是正向连接，只能在xp中控制win7，通过一系列对Socket的学习后，我也掌握了反弹连接，进而实现了反弹Shell。
在实现反弹Shell的过程中我也对mkdir，rmdir等cmd命令有了更充分的理解，能够自己用编程语言将其实现。此次小学期所用的知识有些是自己之前从没接触过的，受益匪浅。
```

```
因为在整个工程实践的过程里，主要负责的内容主题部分有文件隐藏（FileHide），进程隐藏（ProcessHide），注册表键值隐藏（KeyHide），这些都和IAT hook相关，所以对IAT hook不仅仅是理论上的理解，实际的利用也驾轻就熟。但是在实际利用中发现文件隐藏不能使用IAT hook实现，所以测试实现SSTD注入的实现。之后为了将进程隐藏，注册表键值隐藏和文件上传下载的全部内容合成为一个可执行文件（snowwhite.exe），进行了多线程的运用，保持着四个线程都全部运行。在实现将程序（snowwhite.exe）的窗口隐藏的过程里，学习了窗口隐藏的内容，并可以恰当的运用。最后因为执行IAT hook还需要有dll文件，为了将全部的文件合成一个可以自解压的文件，学习相关的知识，将所有相关文件解压到系统system32文件里，最后学习了批处理命令，对多余文件进行删除。在自解压文件解压后，设置可执行文件自动运行。在这整个整理过程中，对文件体系有了更深刻的认识。
```

```
在今年小学期的实践过程中，不仅复习了以往的知识，还学习使用新的工具。开发环境的搭建是我在网络安全课程中学习到的知识。而CVE-2010-3333漏洞利用则是在软件与系统安全中学习到的知识。Apache服务器在Win 7的搭建则是去年小学期的课程中学习到的。通过今年的小学期，将所有学习过的知识一气呵成，对其形成一个完整的理解，成就感极强。同时bro的使用对于我来说，则是新的知识。从一开始对官方英文文档的逃避，到放弃使用bro而改用snort与Guardian，到最后bro的重头再来。我又一次明白了逃避是不能够解决问题。

在之前的学习课程中，大多是学习了恶意程序的编写、漏洞的利用等，但是对于防御方要实现的功能仍旧没有相应的实践。而在本次项目中我主要负责实现防御方的功能，这也使得我对攻防持续对抗有了更深刻的理解。

总之，这次的小学期使得我对过往学习的知识有了整体的理解，不过也认识到了自己的学习上的不足，以及某些方面能力的缺失。希望自己可以好好进步，再接再厉。
```

```
在此次小学期之前和大多数人一样我并没有接触过Bro，但经过此次小学期的锻炼，我不仅学会了Bro的简单使用，自主研究学习的能力也有了很大的提升，一开始安装和初步的使用就耗费了一整天的时间来阅读英文资料和网上的教程，关于Bro的使用，中文的资料少之又少，还是需要大量的耐心来研读官网的帮助和指导资料，小学期之前总是希望能找到中文的资料，尽管其实英文的资料更加的全面、详尽和权威，今后一定要多阅读英文文献来提升自己的能力。蓝方的任务是搭建试验环境以及实现网络传输过程的检测和拦截，尤其是针对CVE-2010-3333漏洞的检测和拦截，在这方面，小组成员之间的沟通和协作显得尤其重要，如果每个人只顾着完成自己的任务，缺少沟通这个环节的话，很容易到了后期造成代码合成的难度加大，实验步骤难以环环相扣，报告演示的时候就会出现一些疏漏和意想不到的问题。此次答辩大多数小组也出现了类似的问题，因此在今后的合作中，借鉴此次的失误教训，应该多加强交流沟通，成员之间了解彼此的项目进度和匹配函数的调用方法，避免此类错误造成的遗憾再次发生。
```

```
1.  对Linux命令工具有了更熟练的掌握。
2.  对于Socket通信中的内存含义有了更清楚的了解。
3.  对于Windows API的使用有了更深入的认识。
4.  虽然文件隐藏和进程没有实现，但是对API Hook和SSTD Hook的原理和实现过程有了了解。
5.  对实施一次网络攻击的具体过程有了一个整体的认识和了解，对于防御的手段和思路也有了提高。
```

```
1.对Kali系统的进一步了解和熟悉：
   a.编写了第一个shell脚本，对shell有初步的认识，体会到了通过shell使用Linux系统的便捷；
   b.学会使用tcpdump的各种命令截获网络数据包；
   c.在Kali中使用命令行添加虚拟网卡，配置网关。
2.对网络通信的进一步了解：socket通信的原理及实现、通信协议的定制。
3.学习使用bro分析截获的网络数据包：
   a.认识bro
   b.使用broctl
   c.根据此次实验编写需要的bro脚本
```

```
收获来说，有以下几个方面：
第一，在配置环境的过程中，了解了网络配置的过程，知道了这个环境中的信息的传递方式，也熟悉了在Linux下的网卡配置，网络环境的搭建，以及虚拟机之中，两台虚拟机如何进行联网，以及它们的通信过程。还有就是对Linux系统的运用，有了更深入的理解，更加熟练。
第二，对cve-2010-3333这个漏洞利用有了很深刻的认识。首先是对这个漏洞产生的原理，在经过了查找资料后和对漏洞经过分析之后，知道了这个漏洞可能带来的危害，并且了解到可以如何去利用这个漏洞。而在利用这个漏洞时，运用了shellcode，在分析shellcode的利用原理的时候，进行了反汇编的工作，对于汇编的能力来说，是一个提升。还有就是在shellcode的利用中，了解到了这个shellcode是如何一步步进行，顺藤摸瓜找到最终我们需要的URLDownloadToFileA函数的。对.dll的导出表有了一些实质性的认识。
第三，在检测cve的过程中，利用shellcode中ASCII码的熵的特点，对文件进行分片的检测。初步了解了一些shellcode代码的特点。并且也利用了Python这个工具，来对.py文件进行执行等一系列操作。
总得来说，最大的收获，对shellcode代码进行分析，这也占了我这部分分工的一大部分，很大程度上提升了对汇编语言的理解程度。
```

```
首先,这次实验我在搭环境上做了太多无用功,有时候电脑发生了某些不可 理喻的错误的时候我觉得还是不要死磕了,让懂得人去解决吧。世上无难事,只 要肯放弃!我的 virtual box 在答辩那天,无论怎么重新配环境都是乱的,后来还 是胡同学给解决的,虽然不太懂他做了些什么,但还是感觉到了浓浓的同学爱以 及我应该早点找他不应该自己折腾一上午。

本次项目我的重点任务是 cve 漏洞利用和 bro,这次漏洞利用实验是针对 cve-2010-3333 漏洞,它是由于微软的 office 办公软件在处理 RTF 文档的绘 图 pFragments 属性时产生的一个栈溢出漏洞。攻击者可以构造恶意的 RTF 文 件,当用 WORD 打开恶意构造的 RTF 文件,WORD 会直接将 RTF 中的数据复制到 局部空间而无需验证复制数据的大小,导致典型的栈溢出。这些在上面关键技术 中的 python 脚本中有详细的解释,这个脚本也是从网上下载的,关于缓冲区溢 出漏洞之前也学过,但是对于 shellcode 如何使用一直都是处于一个模糊的状 态,但是经过这次实战,算是对缓冲区溢出漏洞有了详细的了解。

另外,花的时间最多的是关于 bro,在没有安装 bro 之前我先去网上找了资 料但是没有什么收获,于是想用 snort 来实现数据分析,毕竟这两种工具的作用 类似,但是安装 snort 的过程不太顺利,大概花了一下午加一晚上我还没装好之 后,还是迅速的装上了 bro。先说说我对 bro 的理解,首先它是一个平台,对网络流量进行操作的一个平台,将数据以日志的形式解析出来。另外也可以说它是 一种编程语言,内不由自己的一套语言规则,当然目前我只涉及到一点点,与其他的编程语言有些不同,但是也有很大的共同性。关于变量有很大不同,bro 中 的变量可以是一个集合,不需要定义类型。但是一些 if 语句 for 循环什么的使 用还是一样的,总而言之是一个非常有用的工具!

```

```
1.关于内存分配:不得不说 C 语言的内存分配问题是个大坑,而且都是间接导致 bug。调的时候编译与逻辑都没有问题,发现不了问题,很耽误时间。
2.strlen,strcat 这类以 0 为结束标志进行操作的函数报容易导致内存溢出。 比如 b=strlen(ret),当 ret 没有合理的初始化的时候,strlen 将会一直在内 存中寻找到’\0’为止, 导致计算出来的结果超出给 b 的内存空间。
3.学会更规范的代码习惯。如用 malloc 对内存空间的申请,使用 memcpy 代替 strcpy 等去尽量正确地操作内存。
4..对于调 bug 的总结:整个过程都是伴随着无止境的“烫烫烫烫烫烫......”,还是挺崩溃的。总结一下,调 bug 比较重要的三点:在适当的位置设断点;学会查看内存和局部变量,根据其变换来确定问题所在;有点耐心(这个很重要!)。
5.对漏洞利用的过程有了更深刻的认识。不再只是对其宏观上的理解,亲手具体地编写了代码,虽然是利用的 CVE-2010-3333 漏洞来帮助实现,程序也很稚嫩, 但是体验值还是很高的。
```

```
惨痛的经验教训:一切安全实验都要在虚拟机中测试实验,一定不要用主机;这个教训折腾了我好久,一开始黄老师就嘱咐我们不要用主机,我偷懒没有在虚拟机安装实验所需要的工具,便心存侥幸心理在主机上实验,但是实验没有 侥幸呐...主机不负众望崩溃了,我的内心真的是千万奔腾...一切不能侥幸! 

接触到驱动开发以及学习到一些驱动相关、全局 hook 的进程隐藏的新的知识;因为运用到驱动来实现文件隐藏,就了解学习了应用程序与驱动之间通信以 及驱动运行的一些原理。之前在范老师课上就有讲过进程隐藏 IAT hook——API hook 的一种,此次实验中在 IAT hook 的基础上又学习了另一中 API hook 的方式 ——全局 hook。新知识的收获,全新的知识运用于实验之中。 

组内同学相互协作,共同完成;这次红蓝对抗实验中,一开始我们小组没有明确的分工,这样每个人交叉学习,相互解决问题,因为我和冯丽舟之前在范老师课上做过 socket 通信文件上传 下载实验,后来慢慢分化为我和冯丽舟主攻红方,李昕主攻蓝方。两方各自完成功能,但是两方有些也沟通不当,但大致是能够两方结合共同完成要求并将其演示。

组间同学相互学习,相互帮助,共同进步。在实验中,各个小组的红蓝双方各自都会相互交流学习,并且相互帮助解决 问题,帮助完成功能,共同学习进步。在这个过程中,我真正享受到了学习的快 乐。
```

```
在本次两周半的工程实践中，首先，我对漏洞利用、远程木马控制有了深刻而全面的理解。在软件编写过程中，有漏洞是正常的，但是黑客利用漏洞达到不法目的，危害用户的财产和隐私安全，违背了软件的初衷。所以，作为程序开发者，我们要在开发时全面周到，测试时极尽所能，尽量避免危害性高的漏洞出现。

其次，在程序实现过程中，我对Python语言有了初步的理解。在进程隐藏实现过程中，对操作系统的进程和线程机制理解更为深刻，能够熟练的掌握对进程和线程的各种操作。同时对于系统如何控制和管理进程也进行了深入的学习。在实现控制端Control和被害端Victim连接通信时，我学习了socket相关知识，同时学习了通信双方如何确立协议，以及通信协议的建立和使用。

第三，在实现蓝方有关功能时，我深刻体会了蓝方作为防守方在信息安全系统中起到的重要作用。作为蓝方，不仅要对已知漏洞进行检测和防御，更难的是要对未知漏洞有基本的防御能力。对于蓝方而言，防御手段可能没有红方的攻击手段五花八门，但却具有最基本、最无可避免的检测能力。如今的信息安全攻防战，是一个持续对抗的过程，蓝方需要时时刻刻做好准备，应对红方的攻击。
```

```
在此次实验过程中，我第一个主要的体会就是一定要做好实验过程的记录，最好记录做过哪些操作，得到了来自系统怎样的反馈。这样做有三个最直接的好处：一是你准确的记得自己输入过哪些命令，如果在是实验的过程中出现了问题，可以通过对之前的命令进行逐个排查来确定问题出在哪里；二是如果后来你的系统出现了问题，但自己没办法排查处理的时候，可以通过看之前的记录，重新做一遍，保证实验环境的稳定；三是当其他同学遇到问题需要帮助的时候，可以按照记录来帮助其他同学解决自己曾经遇到过的问题，提高大家的整体效率。

第二个主要的体会是，团结合作的力量是很强大的。当我们在实验中遇到问题的时候，一定要和其他同学进行讨论和交流，因为每个人的力量是很有限的，但大家一起专注于同一个问题的时候，就会有无限的可能。每个人在解决问题时向前迈进的一小步，都有可能在另一个同学那里变成一大步，有可能你的一个小小的行为，都会给其他同学以灵感。所以在我们遇到共同的问题的时候，一定要多沟通，共同解决问题。

第三个主要的体会是，寻求老师的帮助是很有必要的。当你在实验的过程中感到迷茫的，找不到方向的时候，寻求老师的帮助，会让你看懂希望，也的到继续做下去的动力。老师对于实验方向的把握是非常精准的，之后和老师建立良好的交流，才能使我们在实验的时候，不至于卡在一个瓶颈太久，也不至于跑偏。有时候，老师的一个简单的提示，都会成为下一步进度的向导。
```

```
在本次小学期“漏洞利用开发与检测对抗”的工程实践中，我与以往小学期一样，也是收获良多的。首先，我在实验中初步了解了管道的使用原理，学习如何进行socket通信，更加深入地理解了漏洞利用、远程控制的概念等等。在编程方面，也更深地体会到了代码结构合理的重要性。有些遗憾，这次我并没有全部实现想到的结构调整和优化，希望自己以后能做的更好。

其次，团结就是力量，小组中的成员们团结协作，互相启发，共同努力。再者，组间同学的互相帮助和交流，也是很有必要的。一个人的能力毕竟有限，而众人拾柴火焰高。同时，学会适时寻求老师的帮助，可能老师的一次讲解，就能使我们少走不少弯路，省去很多和自己死磕的时间。

最后，通过这次实践，我对信息安全有了更深入的理解，对以往浮于课本的知识有了更切身的体会。在调试的过程中，程序多次被检测删除等经历，都使我感觉像是终于触碰到了信息安全攻防的冰山一角。攻防是一个持续对抗的动态过程，兵来将挡水来土掩，你来我往不亦乐乎。无论是蓝方还是红方，想要做好，都需要具有并会运用广而深的知识沉淀，在一次次对抗中不断提高。
```

```
本次工程让我对编程有了更深刻的认识，编写socket客户端和服务端的代码量很大，而且相对复杂，需要把复杂的各种packet发送及接收进行逻辑化的处理，同时又必须让自己的程序可以快速被同伴理解使用，难度非常的大。

通过阅读同学之前已完成的socket代码，感觉用这套代码很难增添其他功能，所以决定重新设计协议，参考原代码做修改，的确花掉了很多时间；随着编程的逐渐进行，我发现自己的编程进度被同伴超过，他做完了进程隐藏、文件隐藏、远程桌面截屏回传及鼠标键盘控制时，我还没有调试好socket程序，一个小错误会耽误很长时间，由于时间仓促出现了太多bug也增加了修改难度。
直至结课展示时，我们也没能完成远程桌面，文件下载也无法成功（此错误后来已解决），做好的只是shell功能、文件隐藏、进程隐藏、远程桌面的键盘鼠标控制，其他的体积优化、断点续传则完全没有接触，红蓝双方直到演示之前都没有共同预演过，这是很大的遗憾。

庆幸展示时还是很顺利的，除了远程桌面其他都好，但不足之处还有很多，如未改完的shellcode，经常莫名崩溃的socket程序，永远传输失败的截屏图片都是永远的伤，或许有人会比我们做的更好吧，至少现在还需努力吧。
```

```
这次工程实践使我对木马的制作有了深层次的认识。对于在“软件与系统安全”课程中所学知识进行了实践及扩充。之前只利用API HOOK在应用层对WINDOWS API进行HOOK，并没有接触内核函数的HOOK，更没有接触到SSDT HOOK。在项目开始前，对于远程桌面控制有一些排斥，认为难度太大，但经过仔细思考、小组合作，还是给出了一套实现模型、方法。并最终进行实践并取得了初步成果。本次实验不仅加深了我对windows api的理解与使用，了解了一套木马系统的实现原理，包括反弹shell的使用、网络拓扑的配置等等。还让我增强了同学间相互协作的能力。但同时在项目中也存在一些不足、待改进的地方，比如说报文目前为明文传输也存在丢包等现象。进程隐藏并没有使用驱动形式完成。还有很多可以进步的地方，这些在暑假中也尽量利用课余时间来完善。此外，由于之前更多使用百度进行学习资料的查询，本次实验我刻意使用google进行查询，对于搜索技巧也是一个提高。总之，我认为本次工程实践我收获颇丰，也希望能够有更多的机会对课堂所学习的理论进行实践与扩展。
```

```
在这次实践中我有一次体会到了团队合作的重要性。一个人在这么短的时间内完成这么多工作是不可能的。合理的分工是非常重要的。
这次也是对本年度学习的专业知识的回顾。感觉到虽然本年度学到了知识，但是实际用到的时候，又具有很多的挑战。同时我也体会到了一个稳定的开发环境的重要性。原来的时候将虚拟机部署在李涛的电脑上，但是最后还是经常崩溃，最后还是我来配置环境。放在我的电脑上稳定了一些，我还是擅长稳定的运行环境一点。可能是我平时注意保护操作的系统的稳定性吧。李涛那边电脑蓝屏一次之后我就再也远程连接不上VMware虚拟机了，太奇怪了。不过我还是觉得VMware在远程上比VirtualBox好用许多。
这次还是感觉时间紧张，最后很多想要完成是事情还是没有完成。我原本还想给红方写一点代码的，结果发现自己也没时间了。本组没有严格的代码版本控制也是挺遗憾的。红方代码上传到GitHub一直失败，最近可能墙又架高了。不过自己看到红方的代码也就突然害怕了，感觉自己参与起来也不知道从哪里下手。自己在动手写代码方面还是有所欠缺的，第一件事情就是想自己找轮子，在找现成项目时候的又选择困难，最后就放弃了，还是好好做自己的事情吧。
```

```
本次实验难度比较大，对于我们的创新能力有着较高的考验。作为蓝方的一员，新知识点比较多学习成本比较高，很多以前没有听说过的新工具都需要学习。所以，这次小学期最大的收获是学习了大量的新知识，比如bro策略脚本、python的使用等等。同时本次小学期对于旧知识的重温也有很大的促进作用，比如虚拟机的网络配置，tcpdump抓包，shell脚本的编写，以及对流量监测的理解都有了一个新的高度。在完成的蓝方的工作的同时，我还了解了一下红方的原理以及实现方式，包括文件隐藏，downloader的实现方式，cve-2010-3333的使用，获益匪浅。

小学期的前半段时间，我们进行了CTF训练。涉及到了密码学，网络安全等诸多方面。我怀着巨大的热忱，完成着一个又一个难题，突破着自己的能力极限。不仅了解了各种各样的攻击方式，还掌握了信息收集的技巧，密码学就知识的回顾以及对于加深了网络安全的理解。获益匪浅。
```


## 同学们对课程的建议

```
虽然一年比一年的实践内容要多（而且今年真的很多），但是可以说每一次也是对自己的一个挑战。并且可以感觉到每一年这会的小学期在慢慢的改进之中，比如我们实验室的各种设备慢慢变全变好、包括老师的讲解以及提示比去年更加的简洁、灵活、到位。会大致的给同学们讲述整个实验的思路，其中也会善良的给一些小提示，而且也不会像去年那样录视频来让学生做，其实那样不是特别可以锻炼出学生的动手能力，以及同学们也蛮容易陷入一种思维误区。所以觉得老师真的是越来越智慧了。建议就是希望排课老师把课尽量排到白天去上。
```

```
此次小学期跟前两次的课程安排不同，并不是一整天都会有课，但也是每天在做实验。可是没课的时候有时实验室并不开放，或者实验室都有其他同学在上课。因此，大家只能在宿舍或图书馆做，这样每次到实验室都需要再重新配置一下电脑的网络设置，有点麻烦。所以希望以后可以给每个上小学期的班级安排一个专门的教室（其实这是给学校的建议啦，即使不是实验室也好呀）

另外，此次实验红方的任务在上学期的课程中差不多都有提到，做起来也比较有思路。但是蓝方同学的任务很多之前没有接触过，所以前面大部分都处于迷茫的状态，希望老师可以给蓝方同学多些提示，给蓝方更多的建议和思路提醒。因为小学期的时间本来就很短，蓝方前面部分都处于盲目试验的状态，最后完成度比较低，所以个人觉得希望可以得到老师更多的思路提醒，接下来的任务让我们自行完成，这样就不必在实验过程中每次卡断就问老师了。
```

```
对未来工程的建议：一直觉得，在小学期中学到的东西可能比学期内更多，学期内更侧重于理论的课程，而小学期则偏向于实践，可以看的出来，大家对小学期还是非常的感兴趣的，所以，小学期还是非常必要的。我们这次的小学期大部分上课的时间都是在晚上，这一点我觉得不是很合理，希望以后排课的老师可以合理的安排。（当然这个不是老师可以决定的，只是个建议）。因为毕竟是小学期，时间和学期内相比还是会少一些，所以希望老师可以在学期内将一些工程的某部分提早布置下去，这样最后到小学期时整个工程的完成度应该会更高。关于蓝方，希望老师可以多做一些讲解或者引导，（因为网上可以找到的关于蓝方的资料实在是少之甚少）还有分组人数可以稍微多一些。
```

```
半个月的小学期工程实践，每天都很充实，但是太累了。建议之后的小学期这种有很多任务要实现的还是每个组人多一点比较好。我们组两个人实现红方，我们完成的真的不多，但是这个过程真的很累，两个人几乎很多时间都在调试代码。虽然在这个过程中可以采用之前软件安全课上同学的代码，但是把别人的代码理解或者看懂依然是一个很漫长的时间。
还有建议给下一届的师弟师妹们在软件安全课上布置更多的任务，而且高质量完成，这样他们的小学期才会轻松一点。感觉自己就是在软件安全课上仅仅完成了一个关机删除文件，所以现在一片茫然，一切都要现学！
总之，小学期就是一个可以比整整一个学期能学到东西都多的神奇的时间段，但是不得不吐槽课表安排不合理！
```

```
每个学期最后安排的小学期，是一个对所有学习的知识的综合检验，能够有这样一个机会可以把理论运用到实践里边，实战使用，是对我们专业的提高。但是在整个过程中，难免会遇到一些问题，这时候希望老师可以进行集体的讲解，和思路调整，以免同学们做太多的无用功。然后在整个月的安排里，希望时间可以更加集中，大三时，很多同学有不同的安排，更集中的时间可以让大家在较短的时间里完成小学期的任务，之后做自己的任务规划。然后对于整个工程实践的任务，目前这样针对本学期重点进行的实践安排很恰当，希望可以继续保持这样的安排。
总而言之，能够有这样小学期对理论知识进行实践的是很好的机会，不仅可以让我们对所学的知识有更深刻的理解，在完成这些实践的任务后，也提升了我们对自己专业的信心。
```

```
其实在这次实践中，最难的是bro的使用。因为它是从未使用过的工具。在学习bro的大约四天时间内，学习官方文档并结合少数能查阅到的中文文档，还是没办法能够很好地编写bro脚本，实现和iptables的联动。这是我觉得较为可惜的地方。另外，关于蓝方的其他功能，虽然自己有大体的想法，但是由于时间较短，也没有完成。关于这两点我都觉得好可惜。所以希望，我们的课程安排能够更多的集中在白天，而且有跟多的时间跟老师进行接触。这样能够较快的解决问题。

当然以上建议，也是我个人能力缺失的体现。我会在未来的日子里，继续努力。另外有一个小建议，希望之后的结题报告可以使用markdown，并且最好是单人提交。格式控真的觉得用word编写结题报告很难过。

总之，我每次都能在小学期的实践过程中收获满满。而且，老师的教学风格很受用也很亲切。很多感恩！
```

```
希望可以将理论和实践相互紧密结合来计划小学期的任务，建议在系统和软件安全这门必修课的课堂上多对文件上传下载、CVE漏洞利用、文件隐藏和进程隐藏的理论性知识进行尽量详尽的介绍，在实验课的时候进而让学生手动实践，这样可以加深对windows内核rootkit等知识架构的初步了解，这样可以减少在小学期的进一步实践中由于对理论知识掌握不够导致不会调试代码带来的许多问题。同时在网络安全这门课的实验课授课过程中，希望可以多介绍一些类似binwalk、bro等工具的基本使用方法，这可以让学生在小学期的实践中更容易上手，更容易针对自己的需求来应用相关的软件，并且可以经过短期的自主学习实现一些高级功能的使用，也有利于顺利开发学生在小学期实践过程中的动手能力和理论应用于实践的思维能力。
```


```
希望改变分组模式或者完成模式，使同学们可以在完成自己的工作的同时对其他的内容有深入的了解。因为选课的差异，可能同学们对需要的相关技术掌握程度不同，所以希望老师可以对某些必要技能有相应的讲解。
```

```
a.此次实验题目要求的基础知识很多，大部分是上个学期同学们分别做过的实验题目，虽然题目很多，而且每个人都只亲自实践参与了其中一个，其他的并不能深入的了解，此次实验要求把这些题目综合起来，全部实现起来难度略大。

b.分工方面，我们组的分工没有按照老师建议的分为红蓝双方，而是每个人做为红方做了什么攻击行为，就同时作为蓝方去检测这个攻击行为。因为不管是要攻击还是要检测防御，都必须完全了解学习这个知识点，我觉得这种分工方式适合在小学期的两个星期内完成时间项目。
```

```
个人觉得，这次的实践，对新的知识要求不高。可能是我跟的两个组员，正好在上学期做了socket的通信，就正好可以用在攻击方面，向已经被cve利用了的主机进行文件的增删操作。所以这个方面我不用操心什么，但是我也不是非常懂。但是我的分工，我觉得很有意思，漏洞的产生原理，以及对漏洞的利用和检测，我觉得这方面很有趣。所以我的建议，就是，希望项目各个部分可以联系得紧密点，至少需要知道其他部分的工作和作用原理，和自己的分工进行结合。虽然这个项目可以分开做，但是，确实联系的不是特别紧密，我只需要弄懂cve中shellcode的原理，生成了一个带有cve利用的.doc文件，里面带有我们搭建服务器的IP地址和我们的攻击程序，就只用做这些，我其他的一点都不懂，这次攻击都可以实现。所以，由于还是想了解一些有关socket通信的原理和过程，我还是建议整个项目可以更环环相扣一些。
```


```
不得不说,每次一小学期结束之后的都能感觉到自己的进步,这是一种 很好的感觉,所以我很期待小学期。当然这也要归功于老师们的督促与帮助了! CTF 很有意思,那种一边竞争但又一边互相帮助的感觉是以前从未体验过的,会 上瘾!

关于建议呢,以这次题目的难度来看,其实组员人数应该在多一点,比如 5、 6 人,这样的话可能会比较轻松一点。我们组只有三个人,每个人都尽子级最大 的努力完成一部分功能,可是老师的要求相差还是有点远。所以这个组队其实应 该根据实验难度相应调整。
```

```
首先要说的是,这个小学期过得很愉快。前半部分的 ctf 很有意思,让人沉迷其中无法自拔。后期的攻防实验也安排得很好,难度不至于让人望而生畏, 也不至于简单到没有挑战性,让人有去尝试和挑战的欲望。

关于建议:

1.可以继续增加趣味性。整个小学期的体验就是,尽管有很多需要学习,过 程也不是很顺利,但是因为攻防实验本身是有意思的,有“剧本”的,并不觉得多辛苦,也能充分调动趣味性。
2.因为这次的实验和范老师的课结合的很紧密,会有个问题:这次实验所需 的各个部分在范老师的课上都有不同的同学做过类似的,因此负责该部分的同学 将继续负责该部分,从而导致对该知识点特别熟悉,但对其他版块的了解和学习 都不够。这一点,在下一届可以多加提醒。
```

```
在全局架构的分析中可以更加细化功能知识点,提供多一点关键词。在老师在讲解完实验的全局架构后,我是疑惑颇多,还是不太清楚大概的流 程和框架,后来经过和同学的讨论加上自己的理解,才最后梳理得出大概的思路, 但是还是不能够得出如何实现脉络分支功能的基本思路。比如说,像文件隐藏或 者进程隐藏这样的分支功能,老师如果提供一些实现的方法或者关键词,实现起 来应该会得心应手一些。

帮助学生进入状态,引导学生入手实验 虽然梳理得到大概的框架,但是无法入手,不知道从哪里开始做,要做什么,这也是我们一开始没有分工的原因,大家都不知道自己要做什么。我问的最多的 就是:我要做什么?一开始做实验的时候都自己忙自己的,忙了一晚上也不知道 自己做了些什么,大概知道自己要做什么,但是不能确定自己要做什么这种状 态...这可能也与我们没有分工有关系...就希望老师能够帮助我们入手开始着 手做实验,比如说,可以给同学们一些建议说可以怎么怎么分工才能更好地完成工程,列举出需要的几块分支,每个分支怎么分才能更好地相互合作等等。

加强老师与同学的沟通,抓紧其实验的进度。没有一个进度的压迫,大家都不慌不忙,就是做了很久但没有明显的成果, 老师如果可以跟进学生的进度,就可以根据学生所做的内容进行帮助,就比如文 件上传下载,调了很久还是停留在一开始的状态,没有明显的修改成功。我们都是在最后调的实在不知道什么状况,调不出来的情况下才寻求老师帮助,这样就会耗费很多时间,就如这个文件上传下载从一开始拖到结束都还没有完全解决... 如果老师在我们卡住的时候及时了解情况,就能够帮助我们发现问题根源以及解 决问题,可以留出更多时间往下走了。
```

```
本次小学期我们小组通力合作，实现了远程木马程序。实验过程中既有令人欣喜的进展，也有找不到头绪的错误。在这次经历中，每节课都有老师陪着我们，及时处理我们遇到的问题，给我们讲解，使我们在整个实验过程中目标明确，逻辑清楚，没有浪费时间在查找资料上；但是小学期的课程安排的时间比较少，并且比较分散，不易于我们与老师交流。
在实践过程中，由于红方任务较多，且罗列比较详细，大家多是实现红方的功能，我感觉我们并没有很多时间花费在蓝方上，一部分原因是我们不知道采用什么方式实现蓝方的功能，也是因为我们对蓝方的防御手段认识不多，批处理脚本不会编写，还停留在人工查找和解析的层面上。因此我希望老师能对蓝方多讲解一些，包括防御手段和程序的实现，让我们可以将理论转化成实践。
```

```
通过这次小学期的实践，我收获了很多，可以说是没有辜负这四个星期的光阴。我觉得此次小学期比之前都好的一点是，我们是在本学期课程实践的基础上继续进行实验的，相比于大二的小学期，我们能够比之前更快的知道应该从哪里入手，知道自己应该做什么，没有浪费时间在“无从下手”的状态。老师也在一开始就讲授了我们应该搭建怎样的实验环境，给我们提供了很明显的思路，使得项目可以顺利的开始。这是一个跟之前相比很好的一点，希望可以延续下去。

再者，我觉得老师在小学期中担任的角色可以稍微做个调整，这次的小学期中，老师一直担任的角色就是为我们解决遇到的问题，为我们答疑。我觉得可以加一点点带领的功能，一方面可以适时地给我们一些方向上的指导，在我们当前进度的基础上，给一点前进的提示和指引，另一方面也可以起到督促我们的作用，让我们知道自己还差哪些没实现，需要继续努力。我想如果是这样的话，说不定这个小学期我们能做出来的成果会稍微更多一些。
```

```
在本次小学期的小组实践中，老师也和往常一样，一直陪同我们前进。在实践的过程中，我们遇到难解的问题或者瓶颈，都可以寻求老师的帮助，老师也会讲解同学们都不太理解的问题，这样的交流是不可或缺的。不过这次小学期在课程时间的设置上，相较以往而言少了很多，且时间分布比较零散，不可避免地减少了我们和老师的交流沟通。

由于我们在本学期刚结束的课程中接触过大部分的红方内容，有学习的基础，所以对于红方的任务有一定了解。这与以往的小学期相比，我们更容易上手，不至于丝毫没有头绪。相较而言，我们对于蓝方内容所做不多，我觉得一方面是红方内容比较具体，另一方面也是我们对于蓝方了解较少，能理解概念但在具体实现上比较迷茫。若老师能在过程中多引导一些，相信我们在实践中会更有效率，完成更多内容。
```

```
小学期任务之重让我始料未及，前半段的ctf疯狂上分，看到自己的名次上蹿下跳，大家都非常有激情，如同中毒一般一刻不停的刷题；后半段socket反弹shell疯狂编程配环境，对于大家而言，时间的分配是个很大的问题，后半段真的更需要时间，前半段疯狂上分的同学有所体会。

后半段的工程有一个大问题，就是红蓝双方的交互不是太足够，彼此难以了解对方所做的究竟是什么，也缺少实际的演练，以至于最后其实双方都只学到了一半的知识，另一半则完全不了解了。

红蓝对抗没有实现，因为功能实现就已经让大家好尽全力，这也是遗憾。
```

```
我认为当前的工程实践形式非常好，“软件与系统安全”课堂中教授原理、并结合原理做一些简单的、入门级的实验。而小学期的工程实践则是对知识的巩固、提高。但工程难度大，感觉针对项目而言，基础比较薄弱，做起来会较为吃力。希望在项目开始前加强对基础知识技能的巩固（如C语言、C++等语言的基础语法 编写等）。此外，由于小学期时间比较宽松，导致时间规划性不强，前半段时间比较轻松，后半段时间较为紧张。希望在工程实践的进程中能够多加一些展示环节、或中期答辩环节，方便各组间交流、相互学习。同时也可以起到督促的作用。此外，希望能够考虑建一个github仓库，方便代码留存，之后的同学可以用于学习，并在此基础上进行扩展提高，从而实现良性循环。
```

```
希望以后的工程实践能再给一点时间吧。或者给一些现成的工具的提示。看到红蓝两方都没有完全完成所有要求确实挺遗憾的。每一个要求都感觉不是很难，但是结合在一起总是就出现问题。还是觉得，需要教会一下大家的团队合作能力吧。其实虽然很早就部署了远程连接的环境，但是还是到最后一天双方才合在一起测试，之前都是单独的单元测试。幸好没出什么问题。

还有就是希望以后能督促同学们能写一个开发文档和做好版本控制。不过这确实靠组员的自己自觉，不过感觉老师督促一下还是更好一些。Git的汉语文档还是有点少，CSDN总是碎片化的知识，如果老师能强制一下让大家养成版本控制的习惯就好了。这样多人协作会简单一点。

工程实践还是挺有趣的，确实是对本年度的学习知识的很好的一次总结。
```